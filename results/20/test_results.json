{
  "exitCode": 0,
  "harnessOutput": "{\n    \"django__django-11620\": {\n        \"patch_is_None\": false,\n        \"patch_exists\": true,\n        \"patch_successfully_applied\": true,\n        \"resolved\": false,\n        \"tests_status\": {\n            \"FAIL_TO_PASS\": {\n                \"success\": [],\n                \"failure\": [\n                    \"test_technical_404_converter_raise_404 (view_tests.tests.test_debug.DebugViewTests)\"\n                ]\n            },\n            \"PASS_TO_PASS\": {\n                \"success\": [\n                    \"test_repr (view_tests.tests.test_debug.CallableSettingWrapperTests)\",\n                    \"test_handle_db_exception (view_tests.tests.test_debug.DebugViewQueriesAllowedTests)\",\n                    \"test_ajax_response_encoding (view_tests.tests.test_debug.AjaxResponseExceptionReporterFilter)\",\n                    \"test_custom_exception_reporter_filter (view_tests.tests.test_debug.AjaxResponseExceptionReporterFilter)\",\n                    \"test_non_sensitive_request (view_tests.tests.test_debug.AjaxResponseExceptionReporterFilter)\",\n                    \"test_paranoid_request (view_tests.tests.test_debug.AjaxResponseExceptionReporterFilter)\",\n                    \"test_sensitive_request (view_tests.tests.test_debug.AjaxResponseExceptionReporterFilter)\",\n                    \"test_400 (view_tests.tests.test_debug.DebugViewTests)\",\n                    \"test_403 (view_tests.tests.test_debug.DebugViewTests)\",\n                    \"test_403_template (view_tests.tests.test_debug.DebugViewTests)\",\n                    \"test_404 (view_tests.tests.test_debug.DebugViewTests)\"\n                ],\n                \"failure\": [\n                    \"test_cleanse_setting_basic (view_tests.tests.test_debug.HelperFunctionTests)\",\n                    \"test_cleanse_setting_ignore_case (view_tests.tests.test_debug.HelperFunctionTests)\",\n                    \"test_cleanse_setting_recurses_in_dictionary (view_tests.tests.test_debug.HelperFunctionTests)\",\n                    \"test_400 (view_tests.tests.test_debug.NonDjangoTemplatesDebugViewTests)\",\n                    \"test_403 (view_tests.tests.test_debug.NonDjangoTemplatesDebugViewTests)\",\n                    \"test_404 (view_tests.tests.test_debug.NonDjangoTemplatesDebugViewTests)\",\n                    \"test_template_not_found_error (view_tests.tests.test_debug.NonDjangoTemplatesDebugViewTests)\",\n                    \"An exception report can be generated even for a disallowed host.\",\n                    \"test_message_only (view_tests.tests.test_debug.PlainTextReportTests)\",\n                    \"An exception report can be generated for just a request\",\n                    \"An exception report can be generated without request\",\n                    \"A simple exception report can be generated\",\n                    \"A message can be provided in addition to a request\",\n                    \"test_request_with_items_key (view_tests.tests.test_debug.PlainTextReportTests)\",\n                    \"test_template_exception (view_tests.tests.test_debug.PlainTextReportTests)\",\n                    \"test_404_empty_path_not_in_urls (view_tests.tests.test_debug.DebugViewTests)\",\n                    \"test_404_not_in_urls (view_tests.tests.test_debug.DebugViewTests)\",\n                    \"test_classbased_technical_404 (view_tests.tests.test_debug.DebugViewTests)\",\n                    \"test_default_urlconf_template (view_tests.tests.test_debug.DebugViewTests)\",\n                    \"test_files (view_tests.tests.test_debug.DebugViewTests)\",\n                    \"test_no_template_source_loaders (view_tests.tests.test_debug.DebugViewTests)\",\n                    \"test_non_l10ned_numeric_ids (view_tests.tests.test_debug.DebugViewTests)\",\n                    \"test_regression_21530 (view_tests.tests.test_debug.DebugViewTests)\",\n                    \"test_technical_404 (view_tests.tests.test_debug.DebugViewTests)\",\n                    \"test_template_encoding (view_tests.tests.test_debug.DebugViewTests)\",\n                    \"test_template_exceptions (view_tests.tests.test_debug.DebugViewTests)\",\n                    \"Tests for not existing file\",\n                    \"test_encoding_error (view_tests.tests.test_debug.ExceptionReporterTests)\",\n                    \"The ExceptionReporter supports Unix, Windows and Macintosh EOL markers\",\n                    \"test_exception_fetching_user (view_tests.tests.test_debug.ExceptionReporterTests)\",\n                    \"test_ignore_traceback_evaluation_exceptions (view_tests.tests.test_debug.ExceptionReporterTests)\",\n                    \"Safe strings in local variables are escaped.\",\n                    \"test_message_only (view_tests.tests.test_debug.ExceptionReporterTests)\",\n                    \"Non-UTF-8 exceptions/values should not make the output generation choke.\",\n                    \"test_reporting_frames_for_cyclic_reference (view_tests.tests.test_debug.ExceptionReporterTests)\",\n                    \"test_reporting_frames_without_source (view_tests.tests.test_debug.ExceptionReporterTests)\",\n                    \"test_reporting_of_nested_exceptions (view_tests.tests.test_debug.ExceptionReporterTests)\",\n                    \"test_request_with_items_key (view_tests.tests.test_debug.ExceptionReporterTests)\",\n                    \"test_template_encoding (view_tests.tests.test_debug.ExceptionReporterTests)\",\n                    \"Large values should not create a large HTML.\",\n                    \"test_unfrozen_importlib (view_tests.tests.test_debug.ExceptionReporterTests)\",\n                    \"Unprintable values should not make the output generation choke.\",\n                    \"test_callable_settings (view_tests.tests.test_debug.ExceptionReporterFilterTests)\",\n                    \"test_callable_settings_forbidding_to_set_attributes (view_tests.tests.test_debug.ExceptionReporterFilterTests)\",\n                    \"test_custom_exception_reporter_filter (view_tests.tests.test_debug.ExceptionReporterFilterTests)\",\n                    \"test_dict_setting_with_non_str_key (view_tests.tests.test_debug.ExceptionReporterFilterTests)\",\n                    \"test_multivalue_dict_key_error (view_tests.tests.test_debug.ExceptionReporterFilterTests)\",\n                    \"test_non_sensitive_request (view_tests.tests.test_debug.ExceptionReporterFilterTests)\",\n                    \"test_paranoid_request (view_tests.tests.test_debug.ExceptionReporterFilterTests)\",\n                    \"test_sensitive_function_arguments (view_tests.tests.test_debug.ExceptionReporterFilterTests)\",\n                    \"test_sensitive_function_keyword_arguments (view_tests.tests.test_debug.ExceptionReporterFilterTests)\",\n                    \"test_sensitive_method (view_tests.tests.test_debug.ExceptionReporterFilterTests)\",\n                    \"test_sensitive_request (view_tests.tests.test_debug.ExceptionReporterFilterTests)\",\n                    \"test_sensitive_settings (view_tests.tests.test_debug.ExceptionReporterFilterTests)\",\n                    \"test_settings_with_sensitive_keys (view_tests.tests.test_debug.ExceptionReporterFilterTests)\"\n                ]\n            },\n            \"FAIL_TO_FAIL\": {\n                \"success\": [],\n                \"failure\": []\n            },\n            \"PASS_TO_FAIL\": {\n                \"success\": [],\n                \"failure\": []\n            }\n        }\n    }\n}"
}