{
  "exitCode": 0,
  "harnessOutput": "{\n    \"django__django-10914\": {\n        \"patch_is_None\": false,\n        \"patch_exists\": true,\n        \"patch_successfully_applied\": true,\n        \"resolved\": false,\n        \"tests_status\": {\n            \"FAIL_TO_PASS\": {\n                \"success\": [],\n                \"failure\": [\n                    \"test_override_file_upload_permissions (test_utils.tests.OverrideSettingsTests)\"\n                ]\n            },\n            \"PASS_TO_PASS\": {\n                \"success\": [\n                    \"test_allowed_database_chunked_cursor_queries (test_utils.tests.AllowedDatabaseQueriesTests)\",\n                    \"test_allowed_database_queries (test_utils.tests.AllowedDatabaseQueriesTests)\",\n                    \"test_skip_if_db_feature (test_utils.tests.SkippingTestCase)\",\n                    \"test_skip_unless_db_feature (test_utils.tests.SkippingTestCase)\",\n                    \"test_equal_parsing_errors (test_utils.tests.JSONEqualTests)\",\n                    \"test_not_equal_parsing_errors (test_utils.tests.JSONEqualTests)\",\n                    \"test_simple_equal (test_utils.tests.JSONEqualTests)\",\n                    \"test_simple_equal_raise (test_utils.tests.JSONEqualTests)\",\n                    \"test_simple_equal_unordered (test_utils.tests.JSONEqualTests)\",\n                    \"test_simple_not_equal (test_utils.tests.JSONEqualTests)\",\n                    \"test_simple_not_equal_raise (test_utils.tests.JSONEqualTests)\",\n                    \"test_assert_raises_message (test_utils.tests.AssertRaisesMsgTest)\",\n                    \"assertRaisesMessage shouldn't interpret RE special chars.\",\n                    \"test_failure_in_setUpTestData_should_rollback_transaction (test_utils.tests.TestBadSetUpTestData)\",\n                    \"test_all (test_utils.tests.DatabaseAliasTests)\",\n                    \"test_close_match (test_utils.tests.DatabaseAliasTests)\",\n                    \"test_match (test_utils.tests.DatabaseAliasTests)\",\n                    \"test_no_close_match (test_utils.tests.DatabaseAliasTests)\",\n                    \"test_missing_default_databases (test_utils.tests.SkippingClassTestCase)\",\n                    \"test_skip_class_unless_db_feature (test_utils.tests.SkippingClassTestCase)\",\n                    \"test_ordered (test_utils.tests.AssertQuerysetEqualTests)\",\n                    \"test_repeated_values (test_utils.tests.AssertQuerysetEqualTests)\",\n                    \"test_transform (test_utils.tests.AssertQuerysetEqualTests)\",\n                    \"test_undefined_order (test_utils.tests.AssertQuerysetEqualTests)\",\n                    \"test_unordered (test_utils.tests.AssertQuerysetEqualTests)\",\n                    \"test_disallowed_database_chunked_cursor_queries (test_utils.tests.DisallowedDatabaseQueriesTests)\",\n                    \"test_disallowed_database_connections (test_utils.tests.DisallowedDatabaseQueriesTests)\",\n                    \"test_disallowed_database_queries (test_utils.tests.DisallowedDatabaseQueriesTests)\",\n                    \"test_equal (test_utils.tests.AssertURLEqualTests)\",\n                    \"test_message (test_utils.tests.AssertURLEqualTests)\",\n                    \"test_msg_prefix (test_utils.tests.AssertURLEqualTests)\",\n                    \"test_not_equal (test_utils.tests.AssertURLEqualTests)\",\n                    \"test_allowed_hosts (test_utils.tests.SetupTestEnvironmentTests)\",\n                    \"test_setup_test_environment_calling_more_than_once (test_utils.tests.SetupTestEnvironmentTests)\",\n                    \"An exception is setUp() is reraised after disable() is called.\",\n                    \"test_callable (test_utils.tests.AssertWarnsMessageTests)\",\n                    \"test_context_manager (test_utils.tests.AssertWarnsMessageTests)\",\n                    \"test_context_manager_failure (test_utils.tests.AssertWarnsMessageTests)\",\n                    \"test_special_re_chars (test_utils.tests.AssertWarnsMessageTests)\",\n                    \"test_comment_root (test_utils.tests.XMLEqualTests)\",\n                    \"test_parsing_errors (test_utils.tests.XMLEqualTests)\",\n                    \"test_simple_equal (test_utils.tests.XMLEqualTests)\",\n                    \"test_simple_equal_raise (test_utils.tests.XMLEqualTests)\",\n                    \"test_simple_equal_raises_message (test_utils.tests.XMLEqualTests)\",\n                    \"test_simple_equal_unordered (test_utils.tests.XMLEqualTests)\",\n                    \"test_simple_equal_with_leading_or_trailing_whitespace (test_utils.tests.XMLEqualTests)\",\n                    \"test_simple_not_equal (test_utils.tests.XMLEqualTests)\",\n                    \"test_simple_not_equal_raise (test_utils.tests.XMLEqualTests)\",\n                    \"test_simple_not_equal_with_whitespace_in_the_middle (test_utils.tests.XMLEqualTests)\",\n                    \"test_attributes (test_utils.tests.HTMLEqualTests)\",\n                    \"test_complex_examples (test_utils.tests.HTMLEqualTests)\",\n                    \"test_contains_html (test_utils.tests.HTMLEqualTests)\",\n                    \"test_count (test_utils.tests.HTMLEqualTests)\",\n                    \"test_html_contain (test_utils.tests.HTMLEqualTests)\",\n                    \"test_html_parser (test_utils.tests.HTMLEqualTests)\",\n                    \"test_ignore_comments (test_utils.tests.HTMLEqualTests)\",\n                    \"test_parse_html_in_script (test_utils.tests.HTMLEqualTests)\",\n                    \"test_parsing_errors (test_utils.tests.HTMLEqualTests)\",\n                    \"test_self_closing_tags (test_utils.tests.HTMLEqualTests)\",\n                    \"test_simple_equal_html (test_utils.tests.HTMLEqualTests)\",\n                    \"test_unequal_html (test_utils.tests.HTMLEqualTests)\",\n                    \"test_unicode_handling (test_utils.tests.HTMLEqualTests)\",\n                    \"test_assert_field_output (test_utils.tests.AssertFieldOutputTests)\",\n                    \"test_custom_required_message (test_utils.tests.AssertFieldOutputTests)\",\n                    \"test_class_decoration (test_utils.tests.IsolatedAppsTests)\",\n                    \"test_context_manager (test_utils.tests.IsolatedAppsTests)\",\n                    \"test_installed_apps (test_utils.tests.IsolatedAppsTests)\",\n                    \"test_method_decoration (test_utils.tests.IsolatedAppsTests)\",\n                    \"test_nested (test_utils.tests.IsolatedAppsTests)\",\n                    \"test_ignores_connection_configuration_queries (test_utils.tests.AssertNumQueriesUponConnectionTests)\",\n                    \"test_override_database_routers (test_utils.tests.OverrideSettingsTests)\",\n                    \"test_override_file_upload_directory_permissions (test_utils.tests.OverrideSettingsTests)\",\n                    \"test_override_media_root (test_utils.tests.OverrideSettingsTests)\",\n                    \"test_override_media_url (test_utils.tests.OverrideSettingsTests)\",\n                    \"test_override_static_root (test_utils.tests.OverrideSettingsTests)\",\n                    \"test_override_static_url (test_utils.tests.OverrideSettingsTests)\",\n                    \"test_override_staticfiles_dirs (test_utils.tests.OverrideSettingsTests)\",\n                    \"test_override_staticfiles_finders (test_utils.tests.OverrideSettingsTests)\",\n                    \"test_override_staticfiles_storage (test_utils.tests.OverrideSettingsTests)\",\n                    \"test_urlconf_cache (test_utils.tests.OverrideSettingsTests)\",\n                    \"test_urlconf_first (test_utils.tests.OverrideSettingsTests)\",\n                    \"test_urlconf_second (test_utils.tests.OverrideSettingsTests)\",\n                    \"test_failure (test_utils.tests.AssertNumQueriesContextManagerTests)\",\n                    \"test_simple (test_utils.tests.AssertNumQueriesContextManagerTests)\",\n                    \"test_with_client (test_utils.tests.AssertNumQueriesContextManagerTests)\",\n                    \"test_assert_used_on_http_response (test_utils.tests.AssertTemplateUsedContextManagerTests)\",\n                    \"test_error_message (test_utils.tests.AssertTemplateUsedContextManagerTests)\",\n                    \"test_failure (test_utils.tests.AssertTemplateUsedContextManagerTests)\",\n                    \"test_nested_usage (test_utils.tests.AssertTemplateUsedContextManagerTests)\",\n                    \"test_not_used (test_utils.tests.AssertTemplateUsedContextManagerTests)\",\n                    \"test_usage (test_utils.tests.AssertTemplateUsedContextManagerTests)\",\n                    \"test_failure (test_utils.tests.CaptureQueriesContextManagerTests)\",\n                    \"test_nested (test_utils.tests.CaptureQueriesContextManagerTests)\",\n                    \"test_simple (test_utils.tests.CaptureQueriesContextManagerTests)\",\n                    \"test_with_client (test_utils.tests.CaptureQueriesContextManagerTests)\",\n                    \"test_within (test_utils.tests.CaptureQueriesContextManagerTests)\",\n                    \"test_assert_num_queries (test_utils.tests.AssertNumQueriesTests)\",\n                    \"test_assert_num_queries_with_client (test_utils.tests.AssertNumQueriesTests)\"\n                ],\n                \"failure\": []\n            },\n            \"FAIL_TO_FAIL\": {\n                \"success\": [],\n                \"failure\": []\n            },\n            \"PASS_TO_FAIL\": {\n                \"success\": [],\n                \"failure\": []\n            }\n        }\n    }\n}"
}